rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Allow authenticated users to read/write their own profile photos
    match /profilePhotos/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow users to upload task files to their own directories
    match /task-files/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow users to upload task attachments to their own directories
    match /task-attachments/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow task participants to read/write attachments for specific tasks
    // This requires checking if the user is involved in the task
    match /taskAttachments/{taskId}/{allPaths=**} {
      allow read, write: if request.auth != null 
        && (
          // Allow if user is the task requester or assigned expert
          // You may need to adjust this based on how you store task data
          request.auth.uid != null
        );
    }
    
    // Allow reading/writing framework agreement documents for authenticated users
    match /frameworkAgreements/{allPaths=**} {
      allow read, write: if request.auth != null;
    }
    
    // Allow reading/writing signed agreements for authenticated users
    match /signedAgreements/{allPaths=**} {
      allow read, write: if request.auth != null;
    }
    
    // Branding kit assets - allow read for authenticated users
    match /brandingKits/{allPaths=**} {
      allow read: if request.auth != null;
      // Only allow write for specific users (you may want to restrict this further)
      allow write: if request.auth != null;
    }
    
    // Public assets that anyone can read
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // File size and type validation function
    function isValidFile() {
      return request.resource.size <= 10 * 1024 * 1024 // 10MB limit
        && (
          request.resource.contentType.matches('image/.*') ||
          request.resource.contentType.matches('application/pdf') ||
          request.resource.contentType.matches('application/msword') ||
          request.resource.contentType.matches('application/vnd.openxmlformats-officedocument.*') ||
          request.resource.contentType.matches('application/zip') ||
          request.resource.contentType.matches('application/x-zip-compressed') ||
          request.resource.contentType.matches('text/csv') ||
          request.resource.contentType.matches('text/plain')
        );
    }
    
    // Apply file validation to all upload operations
    match /{allPaths=**} {
      allow write: if request.auth != null && isValidFile();
    }
    
    // Deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
